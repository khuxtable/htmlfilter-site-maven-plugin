<?xml version="1.0" encoding="UTF-8"?>
<!-- Converted by db4-upgrade version 1.0 -->
<article version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1999/xhtml"
         xmlns:ns4="http://www.w3.org/1998/Math/MathML"
         xmlns:ns3="http://www.w3.org/2000/svg"
         xmlns:ns="http://docbook.org/ns/docbook">
  <info>
    <title>Merge Example</title>

    <author>
      <personname><firstname>Kathryn</firstname><surname>Huxtable</surname></personname>

      <affiliation>
        <orgname>kathrynhuxtable.org</orgname>
      </affiliation>
    </author>

    <pubdate>2010-03-20</pubdate>
  </info>

  <section>
    <info>
      <title>Merge Example</title>
    </info>

    <para>Using the HTML Filter Site Maven plugin you can merge HTML files
    produced outside the normal site generation process with a Velocity
    template. These files can then be used in your site documentation.</para>

    <para>You can run the goal directly by executing:</para>

    <synopsis>mvn htmlfilter-site:merge</synopsis>

    <para>It is better to bind the goal to the <code>pre-site</code> execution
    phase, thus:</para>

    <programlisting language="xml">&lt;plugin&gt;
    &lt;groupId&gt;org.kathrynhuxtable.maven.plugins&lt;/groupId&gt;
    &lt;artifactId&gt;htmlfilter-site-maven-plugin&lt;/artifactId&gt;
    &lt;version&gt;${project.version}&lt;/version&gt;
    &lt;executions&gt;
        &lt;execution&gt;
            &lt;goals&gt;
                &lt;goal&gt;merge&lt;/goal&gt;
            &lt;/goals&gt;
            &lt;phase&gt;pre-site&lt;/phase&gt;
        &lt;/execution&gt;
    &lt;/executions&gt;
    ...
&lt;/plugin&gt;</programlisting>

    <para>That way you can simply execute:</para>

    <synopsis>mvn site</synopsis>

    <para>and the files will be merged before your site documentation is
    produced.</para>

    <para>By default, the source files are found in
    <code>${basedir}/site/html</code> and are filtered into
    <code>\${project.build.directory}/generated-site/resources</code>, which
    will be copied into your site documentation folder. You can override this
    by specifying the <code>sourceDirectory</code> or
    <code>targetDirectory</code> parameter in the <code>configuration</code>
    section of the plugin, as in the example below, or by specifying the
    <code>${htmlfiltersite.sourceDirectory}</code> or
    <code>${htmlfiltersite.targetDirectory}</code> expression in your POM or
    on the command line.</para>

    <para>The source and target directories cannot at present be the
    same.</para>

    <section>
      <info>
        <title>A Full Example</title>
      </info>

      <para>The following is a complete example of using the HTML Filter Site
      Maven plugin to merge all the html files in a directory tree.</para>

      <programlisting language="xml">&lt;project&gt;
  ...
  &lt;build&gt;
    &lt;plugins&gt;
      ...
      &lt;plugin&gt;
        &lt;groupId&gt;org.kathrynhuxtable.maven.plugins&lt;/groupId&gt;
        &lt;artifactId&gt;htmlfilter-site-maven-plugin&lt;/artifactId&gt;
        &lt;version&gt;${project.version}&lt;/version&gt;
        &lt;executions&gt;
          &lt;execution&gt;
            &lt;goals&gt;
              &lt;goal&gt;merge&lt;/goal&gt;
            &lt;/goals&gt;
            &lt;phase&gt;pre-site&lt;/phase&gt;
          &lt;/execution&gt;
        &lt;/executions&gt;
        &lt;configuration&gt;
          &lt;sourceDirectory&gt;${basedir}/src/site/myhtml&lt;/sourceDirectory&gt;
          &lt;targetDirectory&gt;\${project.build.directory}/generated-site/resources&lt;/targetDirectory&gt;
          &lt;filePattern&gt;**/*.html,**/*.html.vm&lt;/filePattern&gt;
        &lt;/configuration&gt;
      &lt;/plugin&gt;
      ...
    &lt;/plugins&gt;
    ...
  &lt;/build&gt;
  ...
&lt;/project&gt;</programlisting>

      <para>The example above binds the <code>merge</code> goal to the
      <code>pre-site</code> phase, causing it to run before the site
      documentation is created.</para>

      <para>The <code>sourceDirectory</code> parameter overrides the default
      source directory.</para>

      <para>The <code>targetDirectory</code> parameter overrides the default
      target directory.</para>

      <para>The <code>filePattern</code> parameter overrides the default
      pattern matching the files to be converted. The value specified is
      actually the default value.</para>

      <para>Files ending in "<filename>.vm</filename>" will be filtered for
      Velocity properties. The <filename>.html.vm</filename> will be changed
      to <filename>.html</filename> in the target directory.</para>
    </section>

    <section>
      <info>
        <title>A Sample Velocity Template</title>
      </info>

      <para>See the <link xlink:href="velocity-template.html">Velocity
      template example</link> for a template that can be used to process
      files. This is the <filename>default_site.vm</filename> file used by the
      site plugin.</para>
    </section>
  </section>
</article>
