<?xml version="1.0" encoding="UTF-8"?>
<!-- Converted by db4-upgrade version 1.0 -->
<article version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/1999/xhtml"
         xmlns:ns4="http://www.w3.org/1998/Math/MathML"
         xmlns:ns3="http://www.w3.org/2000/svg"
         xmlns:ns="http://docbook.org/ns/docbook">
  <info>
    <title>Tidy Example</title>

    <author>
      <personname><firstname>Kathryn</firstname><surname>Huxtable</surname></personname>

      <affiliation>
        <orgname>kathrynhuxtable.org</orgname>
      </affiliation>
    </author>

    <pubdate>2010-03-20</pubdate>
  </info>

  <section>
    <info>
      <title>Tidy Example</title>
    </info>

    <para>Using the HTML Filter Site Maven plugin you can tidy HTML files
    produced outside the normal site generation process. These files can then
    be used in your site documentation.</para>

    <para>You can run the goal directly by executing:</para>

    <synopsis>mvn htmlfilter-site:tidy</synopsis>

    <para>It is better to bind the goal to the <code>pre-site</code> execution
    phase, thus:</para>

    <programlisting language="xml">&lt;plugin&gt;
    &lt;groupId&gt;org.kathrynhuxtable.maven.plugins&lt;/groupId&gt;
    &lt;artifactId&gt;htmlfilter-site-maven-plugin&lt;/artifactId&gt;
    &lt;version&gt;0.2&lt;/version&gt;
    &lt;executions&gt;
        &lt;execution&gt;
            &lt;goals&gt;
                &lt;goal&gt;tidy&lt;/goal&gt;
            &lt;/goals&gt;
            &lt;phase&gt;pre-site&lt;/phase&gt;
        &lt;/execution&gt;
    &lt;/executions&gt;
    ...
&lt;/plugin&gt;</programlisting>

    <para>That way you can simply execute:</para>

    <synopsis>mvn site</synopsis>

    <para>and the files will be tidied before your site documentation.</para>

    <para>By default, the source files are found in
    <code>${basedir}/src/site/html</code> and are tidied into
    <code>\${project.build.directory}/generated-site/resources</code>, which
    will be copied into your site documentation folder. You can override this
    by specifying the <code>tidySourceDirectory</code> or
    <code>tidyTargetDirectory</code> parameter in the
    <code>configuration</code> section of the plugin, as in the example below,
    or by specifying the <code>${htmlfiltersite.tidySourceDirectory}</code> or
    <code>${htmlfiltersite.tidyTargetDirectory}</code> expression in your POM
    or on the command line.</para>

    <para>The source and target directories can be the same, in which case the
    tidied files will overwrite and replace the originals.</para>

    <section>
      <info>
        <title>A Full Example</title>
      </info>

      <para>The following is a complete example of using the HTML Filter Site
      Maven plugin to tidy all the html files in a directory tree.</para>

      <programlisting language="xml">&lt;project&gt;
  ...
  &lt;build&gt;
    &lt;plugins&gt;
      ...
      &lt;plugin&gt;
        &lt;groupId&gt;org.kathrynhuxtable.maven.plugins&lt;/groupId&gt;
        &lt;artifactId&gt;htmlfilter-site-maven-plugin&lt;/artifactId&gt;
        &lt;version&gt;0.2&lt;/version&gt;
        &lt;executions&gt;
          &lt;execution&gt;
            &lt;goals&gt;
              &lt;goal&gt;tidy&lt;/goal&gt;
            &lt;/goals&gt;
            &lt;phase&gt;pre-site&lt;/phase&gt;
          &lt;/execution&gt;
        &lt;/executions&gt;
        &lt;configuration&gt;
          &lt;tidySourceDirectory&gt;${basedir}/src/site/myhtml&lt;/tidySourceDirectory&gt;
          &lt;tidyTargetDirectory&gt;\${project.build.directory}/generated-site/resources&lt;/tidyTargetDirectory&gt;
          &lt;tidyFilePattern&gt;**/*.html&lt;/tidyFilePattern&gt;
        &lt;/configuration&gt;
      &lt;/plugin&gt;
      ...
    &lt;/plugins&gt;
    ...
  &lt;/build&gt;
  ...
&lt;/project&gt;</programlisting>

      <para>The example above binds the <code>tidy</code> goal to the
      <code>pre-site</code> phase, causing it to run before the site
      documentation is created.</para>

      <para>The <code>tidySourceDirectory</code> parameter overrides the
      default source directory.</para>

      <para>The <code>tidyTargetDirectory</code> parameter overrides the
      default target directory.</para>

      <para>The <code>tidyFilePattern</code> parameter overrides the default
      pattern matching the files to be converted. The value specified is
      actually the default value.</para>
    </section>
  </section>
</article>
