    -----
    Filter Example
    -----

Filter Example

  Using the HTML Filter Site Maven plugin you can Filter HTML files
  produced outside the normal site generation process. These files can then be used
  in your site documentation.

  You can run the goal directly by executing:
  
+------
mvn htmlfilter-site:filter
+------

  It is better to bind the goal to the <<<pre-site>>> execution phase, thus:

+------
<plugin>
    <groupId>org.kathrynhuxtable.maven.plugins</groupId>
    <artifactId>htmlfilter-site-maven-plugin</artifactId>
    <version>0.2</version>
    <executions>
        <execution>
            <goals>
                <goal>filter</goal>
            </goals>
            <phase>pre-site</phase>
        </execution>
    </executions>
    ...
</plugin>
+------

  That way you can simply execute:

+------
mvn site
+------

  and the files will be filtered before your site documentation.

  By default, the source files are found in <<<${basedir}/site/html>>> and are filtered into
  <<<$\{project.build.directory\}/generated-site/resources>>>,
  which will be copied into your site documentation folder.
  You can override this by specifying the <<<sourceDirectory>>> or <<<targetDirectory>>> parameter in the <<<configuration>>>
  section of the plugin, as in the example below, or by specifying the
  <<<$\{htmlfiltersite.sourceDirectory\}>>> or <<<$\{htmlfiltersite.targetDirectory\}>>> expression in your POM
  or on the command line.
  
  The source and target directories cannot at present be the same.
  
* A Full Example

  The following is a complete example of using the HTML Filter Site Maven plugin to filter all the html files in a directory tree.
  
+------
<project>
  ...
  <build>
    <plugins>
      ...
      <plugin>
        <groupId>org.kathrynhuxtable.maven.plugins</groupId>
        <artifactId>htmlfilter-site-maven-plugin</artifactId>
        <version>0.2</version>
        <executions>
          <execution>
            <goals>
              <goal>filter</goal>
            </goals>
            <phase>pre-site</phase>
          </execution>
        </executions>
        <configuration>
          <sourceDirectory>${basedir}/src/site/myhtml</sourceDirectory>
          <targetDirectory>${project.build.directory}/generated-site/resources</targetDirectory>
          <filePattern>**/*.html</filePattern>
          <filterMacros>${basedir}/src/site/filter-template.vm</filterMacros>
        </configuration>
      </plugin>
      ...
    </plugins>
    ...
  </build>
  ...
</project>  
+------

  The example above binds the <<<tidy>>> goal to the <<<pre-site>>> phase,
  causing it to run before the site documentation is created.

  The <<<sourceDirectory>>> parameter overrides the default source directory.

  The <<<targetDirectory>>> parameter overrides the default target directory.
  
  The <<<filePattern>>> parameter overrides the default pattern matching the files to be converted.
  The value specified is actually the default value.
  
  The <<<filterMacros>>> parameter specifies the location of the Velocity template to be used to process the file.
  
* A Sample Velocity Template

  The following is a sample Velocity template that can be used to process files. Note that the file is not
  as complex as that used by Doxia. It doesn't read the <<<site.xml>>> file yet or create any decorations.
  You need to do that yourself. You can get the decorations for your project by copying from a Doxia-generated report file.
  You'll need to do that each time you make changes to your <<<site.xml>>> file, or when you add or remove a report.

-----
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

#macro ( copyright )
  #if ( $project )
    #set ( $currentYear = ${currentDate.year} + 1900 )

    #if ( ${project.inceptionYear} && ( ${project.inceptionYear} != ${currentYear.toString()} ) )
      ${project.inceptionYear}-${currentYear}
    #else
      ${currentYear}
    #end

    #if ( ${project.organization} && ${project.organization.name} )
      ${project.organization.name}
    #end
  #end
#end

#macro ( menuItem $href $name )
  #set ( $currentItemHref = $PathTool.calculateLink( $href, $relativePath ) )
  #set ( $currentItemHref = $currentItemHref.replaceAll( "\\", "/" ) )

  #if ( $alignedFileName == $currentItemHref )
    <strong>$name</strong>
  #else
    <a href="$currentItemHref">$name</a>
  #end
#end

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>${project.name} - $title</title>
    <style type="text/css" media="all">
      @import url("./css/site.css");
    </style>
    <link rel="stylesheet" href="./css/print.css" type="text/css" media="print" />
    <meta http-equiv="Content-Type" content="text/html; charset=$outputEncoding" />
  </head>
  <body class="composite">
    <div id="page">
      <div id="banner">
        <div id="bannerLeft">${project.name}</div>
        <div id="bannerRight"><img src="images/logos/myLogo.png" alt="" /></div>
        <div class="clear"><hr/></div>
      </div>
      <div id="breadcrumbs">
        <div class="xleft">Version: ${project.version}</div>
        <div class="xright">
          <a href="http://blahblahblah.com" class="externalLink">First Author</a>
          |
          <a href="http://yaddayaddayadda.org" class="externalLink">Second Author</a>
        </div>
        <div class="clear"><hr/></div>
      </div>
      <div id="leftColumn">
        <div id="navcolumn">
          <h5>${project.name}</h5>
          <ul>
            <li class="expanded">#menuItem( "index.html" "Introduction" )</li>
            <li class="expanded">#menuItem( "downloads.html" "Downloads" )</li>
            <li class="expanded">#menuItem( "usage.html" "Usage" )</li>
          </ul>


          <h5>Project Information</h5>
          <ul>
            <li><a href="dependencies.html">Dependencies</a></li>
            <li><a href="issue-tracking.html">Issue Tracking</a></li>
            <li><a href="mail-lists.html">Mailing Lists</a></li>
            <li><a href="license.html">Project License</a></li>
            <li><a href="project-summary.html">Project Summary</a></li>
            <li><a href="team-list.html">Project Team</a></li>
            <li><a href="source-repository.html">Source Repository</a></li>
          </ul>
          
          <h5>Project Reports</h5>
          <ul>
            <li><a href="cpd.html">CPD Report</a></li>
            <li><a href="apidocs/index.html">JavaDocs</a></li>
            <li><a href="pmd.html">PMD Report</a></li>
            <li><a href="xref/index.html">Source Xref</a></li>
            <li><a href="taglist.html">Tag List</a></li>
          </ul>
        </div>
      </div>

      <div id="bodyColumn">
        <div id="contentBox">
          $bodyContent
        </div>
      </div>

      <div class="clear"><hr/></div>
      <div id="footer">
        <div class="xleft">
          &#169;#copyright()
          <div id="lastPublished">Last Published: $lastPublished</div>
        </div>
        <div class="xright">
          <a href="http://maven.apache.org/" title="Built by Maven" class="poweredBy">
            <img class="poweredBy" alt="Built by Maven" src="./images/logos/maven-feather.png" width="90" height="30" border="1" />
          </a>
        </div>
        <div class="clear">
          <hr/>
        </div>
      </div>
    </div>
  </body>
</html>
-----

~~ $Id$

	